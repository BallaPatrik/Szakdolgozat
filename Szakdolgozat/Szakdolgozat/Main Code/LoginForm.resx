<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>